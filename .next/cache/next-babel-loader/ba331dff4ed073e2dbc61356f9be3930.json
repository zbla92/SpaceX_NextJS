{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/milanblaz/Area51/SPACE_X/client/src/pages/launches/[flight_id]/index.js\";\nimport React from 'react';\nimport MainLayout from '../../../layouts/MainLayout';\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nconst client = new ApolloClient({\n  uri: 'https://api.spacex.land/graphql/',\n  cache: new InMemoryCache()\n});\nexport var __N_SSP = true;\nexport default function LaunchPage() {\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Launch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = LaunchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LaunchPage\");","map":{"version":3,"sources":["/Users/milanblaz/Area51/SPACE_X/client/src/pages/launches/[flight_id]/index.js"],"names":["React","MainLayout","ApolloClient","InMemoryCache","gql","client","uri","cache","LaunchPage"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,GAAtC,QAAiD,gBAAjD;AAEA,MAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC9BI,EAAAA,GAAG,EAAE,kCADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIJ,aAAJ;AAFuB,CAAjB,CAAf;;AAKA,eAAe,SAASK,UAAT,GAAsB;AACnC,sBACE,QAAC,UAAD;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KANuBA,U","sourcesContent":["import React from 'react';\nimport MainLayout from '../../../layouts/MainLayout';\n\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://api.spacex.land/graphql/',\n  cache: new InMemoryCache(),\n});\n\nexport default function LaunchPage() {\n  return (\n    <MainLayout>\n      <div>Launch</div>\n    </MainLayout>\n  );\n}\n\nexport async function getServerSideProps(context) {\n  const { store, query, req } = context;\n  console.log(query);\n  return {\n    props: {}, // will be passed to the page component as props\n  };\n}\n"]},"metadata":{},"sourceType":"module"}